Index: app/src/main/java/com/example/project_ltdd/activities/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.project_ltdd.activities;\r\n\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.project_ltdd.R;\r\nimport com.example.project_ltdd.databinding.ActivityLoginBinding;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n    private ActivityLoginBinding binding;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = ActivityLoginBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        Animation fade_in = AnimationUtils.loadAnimation(this, R.anim.fade_in);\r\n        Animation bottom_down = AnimationUtils.loadAnimation(this, R.anim.bottom_down);\r\n\r\n        binding.topLinearLayout.setAnimation(bottom_down);\r\n\r\n        Handler handler = new Handler();\r\n\r\n\r\n        Runnable runnable = new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                binding.cardViewLogo.setAnimation(fade_in);\r\n                binding.textViewLogo.setAnimation(fade_in);\r\n                binding.cardViewContain.setAnimation(fade_in);\r\n                binding.registerLayout.setAnimation(fade_in);\r\n                binding.cardView2.setAnimation(fade_in);\r\n                binding.cardView3.setAnimation(fade_in);\r\n                binding.cardView4.setAnimation(fade_in);\r\n            }\r\n        };\r\n\r\n\r\n        handler.postDelayed(runnable, 1000);\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/activities/LoginActivity.java b/app/src/main/java/com/example/project_ltdd/activities/LoginActivity.java
--- a/app/src/main/java/com/example/project_ltdd/activities/LoginActivity.java	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/app/src/main/java/com/example/project_ltdd/activities/LoginActivity.java	(date 1746284536007)
@@ -4,14 +4,28 @@
 import android.os.Handler;
 import android.view.animation.Animation;
 import android.view.animation.AnimationUtils;
+import android.widget.EditText;
+import android.widget.Toast;
 
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.example.project_ltdd.R;
+import com.example.project_ltdd.api.retrofit_client.AuthRetrofitClient;
+import com.example.project_ltdd.api.services.AuthService;
 import com.example.project_ltdd.databinding.ActivityLoginBinding;
+import com.example.project_ltdd.models.LoginRequest;
+import com.example.project_ltdd.models.LoginResponse;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
 
 public class LoginActivity extends AppCompatActivity {
+    public static String usLoginFullname;
+    public static int usLoginId;
     private ActivityLoginBinding binding;
+    EditText edt_Email, edt_Password;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -42,5 +56,50 @@
 
         handler.postDelayed(runnable, 1000);
 
+        AnhXa();
+
+        binding.btnLogin.setOnClickListener(v -> {
+            String email = edt_Email.getText().toString().trim();
+            String password = edt_Password.getText().toString().trim();
+
+            if (email.isEmpty() || password.isEmpty()) {
+                Toast.makeText(LoginActivity.this, "Vui lòng nhập đầy đủ email và mật khẩu", Toast.LENGTH_SHORT).show();
+                return;
+            }
+
+            LoginRequest loginRequest = new LoginRequest(email, password);
+
+            AuthService apiService = AuthRetrofitClient.getClient().create(AuthService.class);
+            Call<LoginResponse> call = apiService.login(loginRequest);
+            call.enqueue(new Callback<LoginResponse>() {
+                @Override
+                public void onResponse(Call<LoginResponse> call, Response<LoginResponse> response) {
+                    if (response.isSuccessful() && response.body() != null) {
+                        LoginResponse res = response.body();
+                        if (res.isSuccess()) {
+                            usLoginFullname = res.getData().getFullName();
+                            usLoginId = res.getData().getUserId();
+                            Toast.makeText(LoginActivity.this, "Welcome " + usLoginFullname, Toast.LENGTH_SHORT).show();
+
+                            // TODO: Chuyển sang màn hình chính
+                        } else {
+                            Toast.makeText(LoginActivity.this, "Sai tài khoản hoặc mật khẩu", Toast.LENGTH_SHORT).show();
+                        }
+                    } else {
+                        Toast.makeText(LoginActivity.this, "Đăng nhập thất bại. Vui lòng thử lại.", Toast.LENGTH_SHORT).show();
+                    }
+                }
+
+                @Override
+                public void onFailure(Call<LoginResponse> call, Throwable t) {
+                    Toast.makeText(LoginActivity.this, "Lỗi kết nối server: " + t.getMessage(), Toast.LENGTH_SHORT).show();
+                }
+            });
+        });
+    }
+    private void AnhXa(){
+        edt_Email = (EditText) findViewById(R.id.edt_email);
+        edt_Password = (EditText) findViewById(R.id.edt_password);
+
     }
 }
Index: app/src/main/res/xml/network_security_config.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<network-security-config>\r\n    <base-config cleartextTrafficPermitted=\"true\" />\r\n</network-security-config>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/network_security_config.xml b/app/src/main/res/xml/network_security_config.xml
--- a/app/src/main/res/xml/network_security_config.xml	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/app/src/main/res/xml/network_security_config.xml	(date 1746287625274)
@@ -1,4 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <network-security-config>
     <base-config cleartextTrafficPermitted="true" />
+<!--    <domain-config cleartextTrafficPermitted="true">-->
+<!--        <domain includeSubdomains="false">192.168.1.79</domain>-->
+<!--    </domain-config>-->
 </network-security-config>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n\r\n\r\n    <application\r\n        android:networkSecurityConfig=\"@xml/network_security_config\"\r\n        android:allowBackup=\"true\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Project_LTDD\"\r\n        tools:targetApi=\"31\">\r\n        <activity android:name=\".activities.MainActivity\"\r\n            android:windowSoftInputMode=\"adjustNothing\"/>\r\n        <activity\r\n            android:name=\".activities.SplashActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/app/src/main/AndroidManifest.xml	(date 1746288014896)
@@ -20,12 +20,15 @@
         tools:targetApi="31">
         <activity android:name=".activities.MainActivity"
             android:windowSoftInputMode="adjustNothing"/>
+        <activity android:name=".activities.SplashActivity"
+            android:windowSoftInputMode="adjustNothing"/>
+        <activity android:name=".activities.SignUpActivity"
+            android:windowSoftInputMode="adjustNothing"/>
         <activity
-            android:name=".activities.SplashActivity"
+            android:name=".activities.LoginActivity"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
-
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
Index: ../English_Dictionary/src/main/java/vn/iotstar/SecurityConfig.java
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/SecurityConfig.java b/../English_Dictionary/src/main/java/vn/iotstar/SecurityConfig.java
deleted file mode 100644
--- a/../English_Dictionary/src/main/java/vn/iotstar/SecurityConfig.java	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ /dev/null	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
@@ -1,20 +0,0 @@
-package vn.iotstar;
-
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.security.config.annotation.web.builders.HttpSecurity;
-import org.springframework.security.web.SecurityFilterChain;
-
-@Configuration
-public class SecurityConfig {
-    @Bean
-    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
-        http
-            .authorizeHttpRequests(auth -> auth
-                .anyRequest().permitAll() // Cho phép tất cả request
-            )
-            .csrf(csrf -> csrf.disable()); // Tắt CSRF
-
-        return http.build();
-    }
-}
Index: ../English_Dictionary/src/main/java/vn/iotstar/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.iotstar.repository;\r\n\r\nimport java.util.List;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.data.jpa.repository.Modifying;\r\nimport org.springframework.data.jpa.repository.Query;\r\nimport org.springframework.data.repository.query.Param;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport jakarta.transaction.Transactional;\r\nimport vn.iotstar.entity.UserEntity;\r\nimport vn.iotstar.entity.WordEntity;\r\n\r\n@Repository\r\npublic interface UserRepository extends JpaRepository<UserEntity, Integer>{\r\n\t\r\n\t\r\n\t@Query(\"Select u.words From UserEntity u Where u.user_id = :userId\")\r\n\tList<WordEntity> findWordSearchByUser(@Param(\"userId\") int userId);\r\n\t\r\n\t@Modifying\r\n\t@Transactional\r\n\t@Query(value = \"DELETE FROM word_search WHERE user_id = :userId AND word_id IN (:listSearchWords)\", nativeQuery = true)\r\n\tvoid deleteSearchWords(@Param(\"userId\") int userId, @Param(\"listSearchWords\") List<Long> listSearchWords);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/repository/UserRepository.java b/../English_Dictionary/src/main/java/vn/iotstar/repository/UserRepository.java
--- a/../English_Dictionary/src/main/java/vn/iotstar/repository/UserRepository.java	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/repository/UserRepository.java	(date 1746287126320)
@@ -1,6 +1,7 @@
 package vn.iotstar.repository;
 
 import java.util.List;
+import java.util.Optional;
 
 import org.springframework.data.jpa.repository.JpaRepository;
 import org.springframework.data.jpa.repository.Modifying;
@@ -23,4 +24,7 @@
 	@Transactional
 	@Query(value = "DELETE FROM word_search WHERE user_id = :userId AND word_id IN (:listSearchWords)", nativeQuery = true)
 	void deleteSearchWords(@Param("userId") int userId, @Param("listSearchWords") List<Long> listSearchWords);
+	
+	@Query("Select u From UserEntity u Where u.email = :email")
+	Optional<UserEntity> findByEmail(@Param("email") String email);
 }
Index: ../English_Dictionary/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.4.4</version>\r\n\t\t<relativePath /> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>vn.iotstar</groupId>\r\n\t<artifactId>English_Dictionary</artifactId>\r\n\t<version>1.0</version>\r\n\t<packaging>war</packaging>\r\n\t<name>English_Dictionary</name>\r\n\t<description>Video project</description>\r\n\t<url />\r\n\t<licenses>\r\n\t\t<license />\r\n\t</licenses>\r\n\t<developers>\r\n\t\t<developer />\r\n\t</developers>\r\n\t<scm>\r\n\t\t<connection />\r\n\t\t<developerConnection />\r\n\t\t<tag />\r\n\t\t<url />\r\n\t</scm>\r\n\t<properties>\r\n\t\t<java.version>21</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-validation</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.thymeleaf.extras</groupId>\r\n\t\t\t<artifactId>thymeleaf-extras-springsecurity6</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.h2database</groupId>\r\n\t\t\t<artifactId>h2</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-j</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-tomcat</artifactId>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.security</groupId>\r\n\t\t\t<artifactId>spring-security-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t\t<!-- https://mvnrepository.com/artifact/org.json/json -->\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.json</groupId>\r\n\t\t\t<artifactId>json</artifactId>\r\n\t\t\t<version>20240303</version>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<annotationProcessorPaths>\r\n\t\t\t\t\t\t<path>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</path>\r\n\t\t\t\t\t</annotationProcessorPaths>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/pom.xml b/../English_Dictionary/pom.xml
--- a/../English_Dictionary/pom.xml	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/../English_Dictionary/pom.xml	(date 1746284535992)
@@ -99,6 +99,13 @@
 			<artifactId>json</artifactId>
 			<version>20240303</version>
 		</dependency>
+
+		<!--Thêm dependency để gửi mail-->
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-mail</artifactId>
+		</dependency>
+
 	</dependencies>
 
 	<build>
Index: app/src/main/java/com/example/project_ltdd/activities/SignUpActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.project_ltdd.activities;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.project_ltdd.R;\r\n\r\npublic class SignUpActivity extends AppCompatActivity {\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_sign_up);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/activities/SignUpActivity.java b/app/src/main/java/com/example/project_ltdd/activities/SignUpActivity.java
--- a/app/src/main/java/com/example/project_ltdd/activities/SignUpActivity.java	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/app/src/main/java/com/example/project_ltdd/activities/SignUpActivity.java	(date 1746284536007)
@@ -1,16 +1,143 @@
 package com.example.project_ltdd.activities;
 
+import android.app.AlertDialog;
+import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
 
 import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.example.project_ltdd.R;
+import com.example.project_ltdd.api.retrofit_client.AuthRetrofitClient;
+import com.example.project_ltdd.api.services.AuthService;
+import com.example.project_ltdd.models.OTPVerificationModel;
+import com.example.project_ltdd.models.UserRegisterModel;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
 
 public class SignUpActivity extends AppCompatActivity {
+    Button btnSignUp;
+    EditText edtFullName, edtEmail, edtPassword, edtConfirmPassword;
+    private String email, fullname, password, confirmPassword;
+
+
+    AuthService authService;
+
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_sign_up);
+
+        Anhxa();
+
+        authService = AuthRetrofitClient.getClient().create(AuthService.class);
+        /*ĐĂNG KÝ VÀ TẠO OTP*/
+        btnSignUp.setOnClickListener(v -> {
+            fullname = edtFullName.getText().toString();
+            email = edtEmail.getText().toString();
+            password = edtPassword.getText().toString();
+            confirmPassword = edtConfirmPassword.getText().toString();
+
+            if (!password.equals(confirmPassword)) {
+                Toast.makeText(this, "Mật khẩu không khớp", Toast.LENGTH_SHORT).show();
+                return;
+            }
+
+            UserRegisterModel dto = new UserRegisterModel();
+            dto.setEmail(email);
+            dto.setFullname(fullname);
+            dto.setPassword(password);
+
+            authService.register(dto).enqueue(new Callback<String>() {
+                @Override
+                public void onResponse(Call<String> call, Response<String> response) {
+                    if (response.isSuccessful()) {
+                        Toast.makeText(SignUpActivity.this, "OTP đã gửi đến email", Toast.LENGTH_SHORT).show();
+                        SendOTPSuccessful();
+                    } else {
+                        Toast.makeText(SignUpActivity.this, "Email đã tồn tại", Toast.LENGTH_SHORT).show();
+                    }
+                }
+
+                @Override
+                public void onFailure(Call<String> call, Throwable t) {
+                    Toast.makeText(SignUpActivity.this, "Lỗi kết nối: " + t.getMessage(), Toast.LENGTH_LONG).show();
+                    t.printStackTrace();
+                }
+            });
+        });
+        /*ĐĂNG KÝ VÀ TẠO OTP*/
+
+    }
+
+    private void SendOTPSuccessful(){
+        /*NHẬP OTP VÀ TẠO TÀI KHOẢN*/
+        LayoutInflater inflater = LayoutInflater.from(SignUpActivity.this);
+        View otpView = inflater.inflate(R.layout.activity_otp, null);
+
+        EditText edtOtp = otpView.findViewById(R.id.otpView);
+
+        AlertDialog dialog = new AlertDialog.Builder(SignUpActivity.this)
+                .setView(otpView)
+                .setCancelable(false)
+                .setPositiveButton("Xác nhận", null)
+                .setNegativeButton("Huỷ", (d, w) -> d.dismiss())
+                .create();
+
+        dialog.setOnShowListener(dlg -> {
+            dialog.getButton(AlertDialog.BUTTON_POSITIVE).setOnClickListener(v1 -> {
+                String otpInput = edtOtp.getText().toString().trim();
+                if (otpInput.length() != 6) {
+                    edtOtp.setError("OTP phải có 6 chữ số");
+                    return;
+                }
+
+                // Gửi OTP và thông tin user để xác thực và tạo tài khoản
+                OTPVerificationModel otpDTO = new OTPVerificationModel();
+                otpDTO.setEmail(email);
+                otpDTO.setOtp(otpInput);
+                otpDTO.setFullname(fullname);
+                otpDTO.setPassword(password);
+
+                authService.verifyOtp(otpDTO).enqueue(new Callback<String>() {
+                    @Override
+                    public void onResponse(Call<String> call, Response<String> response) {
+                        if (response.isSuccessful()) {
+                            Toast.makeText(SignUpActivity.this, "Tạo tài khoản thành công!", Toast.LENGTH_SHORT).show();
+                            dialog.dismiss();
+                            Intent intent = new Intent(SignUpActivity.this, LoginActivity.class);
+                            startActivity(intent);
+                            finish();
+                        } else {
+                            Toast.makeText(SignUpActivity.this, "OTP không đúng hoặc đã hết hạn!", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+
+                    @Override
+                    public void onFailure(Call<String> call, Throwable t) {
+                        Toast.makeText(SignUpActivity.this, "Lỗi kết nối", Toast.LENGTH_SHORT).show();
+                    }
+                });
+            });
+        });
+
+        dialog.show();
+        /*NHẬP OTP VÀ TẠO TÀI KHOẢN*/
+    }
+
+    private void Anhxa(){
+        btnSignUp = (Button) findViewById(R.id.btn_sign_up);
+        edtFullName = (EditText) findViewById(R.id.edt_full_name);
+        edtEmail = (EditText) findViewById(R.id.edt_email_su);
+        edtPassword = (EditText) findViewById(R.id.edt_password_su);
+        edtConfirmPassword = (EditText) findViewById(R.id.edt_confirm_password);
     }
 }
Index: ../English_Dictionary/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=English_Dictionary\r\nserver.port = 8077\r\nserver.address=0.0.0.0\r\n\r\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/english_dictionary?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8\r\nspring.datasource.username=root\r\nspring.datasource.password=123456789\r\n\r\nspring.jpa.show-sql=true\r\nspring.jpa.properties.hibernate.format_sql=true\r\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect\r\nspring.jpa.hibernate.ddl-auto=update\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/../English_Dictionary/src/main/resources/application.properties b/../English_Dictionary/src/main/resources/application.properties
--- a/../English_Dictionary/src/main/resources/application.properties	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/../English_Dictionary/src/main/resources/application.properties	(date 1746287380392)
@@ -11,3 +11,11 @@
 spring.jpa.properties.hibernate.format_sql=true
 spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
 spring.jpa.hibernate.ddl-auto=update
+
+spring.mail.host=smtp.gmail.com
+spring.mail.port=587
+spring.mail.username=anluc1412@gmail.com
+spring.mail.password=qzvwsgbubvkzjwlt
+spring.mail.properties.mail.smtp.auth=true
+spring.mail.properties.mail.smtp.starttls.enable=true
+
Index: app/src/main/java/com/example/project_ltdd/models/UserRegisterModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/models/UserRegisterModel.java b/app/src/main/java/com/example/project_ltdd/models/UserRegisterModel.java
new file mode 100644
--- /dev/null	(date 1746284536007)
+++ b/app/src/main/java/com/example/project_ltdd/models/UserRegisterModel.java	(date 1746284536007)
@@ -0,0 +1,40 @@
+package com.example.project_ltdd.models;
+
+public class UserRegisterModel {
+    private String email;
+    private String fullname;
+    private String password;
+
+    public UserRegisterModel() {
+    }
+
+    public UserRegisterModel(String email, String fullname, String password) {
+        this.email = email;
+        this.fullname = fullname;
+        this.password = password;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public String getFullname() {
+        return fullname;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public void setFullname(String fullname) {
+        this.fullname = fullname;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+}
Index: app/src/main/java/com/example/project_ltdd/models/LoginResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/models/LoginResponse.java b/app/src/main/java/com/example/project_ltdd/models/LoginResponse.java
new file mode 100644
--- /dev/null	(date 1746284536007)
+++ b/app/src/main/java/com/example/project_ltdd/models/LoginResponse.java	(date 1746284536007)
@@ -0,0 +1,65 @@
+package com.example.project_ltdd.models;
+
+public class LoginResponse {
+    private boolean success;
+    private String message;
+    private Data data;
+
+    public LoginResponse() {
+    }
+
+    public class Data {
+        private int userId;
+        private String fullname;
+        private String email;
+
+        public void setUserId(int userId) {
+            this.userId = userId;
+        }
+
+        public void setFullname(String fullname) {
+            this.fullname = fullname;
+        }
+
+        public void setEmail(String email) {
+            this.email = email;
+        }
+
+        public int getUserId() {
+            return userId;
+        }
+
+        public String getFullName() {
+            return fullname;
+        }
+
+        public String getEmail() {
+            return email;
+        }
+    }
+
+    public boolean isSuccess() {
+        return success;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public Data getData() {
+        return data;
+    }
+
+    public void setData(Data data) {
+        this.data = data;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+
+    public void setSuccess(boolean success) {
+        this.success = success;
+    }
+
+}
Index: app/src/main/java/com/example/project_ltdd/models/OTPVerificationModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/models/OTPVerificationModel.java b/app/src/main/java/com/example/project_ltdd/models/OTPVerificationModel.java
new file mode 100644
--- /dev/null	(date 1746284536007)
+++ b/app/src/main/java/com/example/project_ltdd/models/OTPVerificationModel.java	(date 1746284536007)
@@ -0,0 +1,50 @@
+package com.example.project_ltdd.models;
+
+public class OTPVerificationModel {
+    private String email;
+    private String otp;
+    private String fullname;
+    private String password;
+
+    public OTPVerificationModel() {
+    }
+
+    public OTPVerificationModel(String email, String otp, String fullname, String password) {
+        this.email = email;
+        this.otp = otp;
+        this.fullname = fullname;
+        this.password = password;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public String getOtp() {
+        return otp;
+    }
+
+    public String getFullname() {
+        return fullname;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public void setOtp(String otp) {
+        this.otp = otp;
+    }
+
+    public void setFullname(String fullname) {
+        this.fullname = fullname;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+}
Index: app/src/main/java/com/example/project_ltdd/models/LoginRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/models/LoginRequest.java b/app/src/main/java/com/example/project_ltdd/models/LoginRequest.java
new file mode 100644
--- /dev/null	(date 1746284536007)
+++ b/app/src/main/java/com/example/project_ltdd/models/LoginRequest.java	(date 1746284536007)
@@ -0,0 +1,30 @@
+package com.example.project_ltdd.models;
+
+public class LoginRequest {
+    private String email;
+    private String password;
+
+    public LoginRequest() {
+    }
+
+    public LoginRequest(String email, String password) {
+        this.email = email;
+        this.password = password;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public void setEmail(String email) {
+        this.email = email;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/repository/OtpRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/repository/OtpRepository.java b/../English_Dictionary/src/main/java/vn/iotstar/repository/OtpRepository.java
new file mode 100644
--- /dev/null	(date 1746284535992)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/repository/OtpRepository.java	(date 1746284535992)
@@ -0,0 +1,12 @@
+package vn.iotstar.repository;
+
+import java.util.Optional;
+
+import org.springframework.data.jpa.repository.JpaRepository;
+
+import vn.iotstar.entity.OtpEntity;
+
+public interface OtpRepository extends JpaRepository<OtpEntity, Integer>{
+	Optional<OtpEntity> findByEmail(String email);
+    void deleteByEmail(String email);
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/entity/EntityForTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/entity/EntityForTest.java b/../English_Dictionary/src/main/java/vn/iotstar/entity/EntityForTest.java
new file mode 100644
--- /dev/null	(date 1746284535992)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/entity/EntityForTest.java	(date 1746284535992)
@@ -0,0 +1,35 @@
+package vn.iotstar.entity;
+
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.JoinColumn;
+import jakarta.persistence.ManyToOne;
+import jakarta.persistence.Table;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@Table(name = "definition")
+@Entity
+public class EntityForTest {
+	@Id
+	@GeneratedValue(strategy = GenerationType.IDENTITY)
+	private Long definiton_id;
+	
+	@Column(columnDefinition = "TEXT")
+	private String definition;
+	
+	
+	@Column(columnDefinition = "TEXT")
+	private String example;
+	
+	@ManyToOne
+	@JoinColumn(name = "meaning_id")
+	private MeaningEntity meaning;
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/service/impl/EmailServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/service/impl/EmailServiceImpl.java b/../English_Dictionary/src/main/java/vn/iotstar/service/impl/EmailServiceImpl.java
new file mode 100644
--- /dev/null	(date 1746284536007)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/service/impl/EmailServiceImpl.java	(date 1746284536007)
@@ -0,0 +1,22 @@
+package vn.iotstar.service.impl;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.mail.SimpleMailMessage;
+import org.springframework.mail.javamail.JavaMailSender;
+import org.springframework.stereotype.Service;
+
+import vn.iotstar.service.EmailService;
+@Service
+public class EmailServiceImpl implements EmailService {
+	@Autowired
+	private JavaMailSender mailSender;
+
+	@Override
+	public void sendOTPEmail(String toEmail, String otp) {
+		SimpleMailMessage message = new SimpleMailMessage();
+		message.setTo(toEmail);
+		message.setSubject("Mã xác thực OTP");
+		message.setText("Mã OTP của bạn là: " + otp + ". Mã có hiệu lực trong 5 phút.");
+		mailSender.send(message);
+	}
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/model/UserRegisterDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/model/UserRegisterDTO.java b/../English_Dictionary/src/main/java/vn/iotstar/model/UserRegisterDTO.java
new file mode 100644
--- /dev/null	(date 1746284535992)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/model/UserRegisterDTO.java	(date 1746284535992)
@@ -0,0 +1,14 @@
+package vn.iotstar.model;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class UserRegisterDTO {
+	private String fullname;
+    private String email;
+    private String password;
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/config/RestTemplateConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.iotstar.config;\r\n\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.web.client.RestTemplate;\r\n\r\n@Configuration\r\npublic class RestTemplateConfig {\r\n\t\r\n\t@Bean\r\n    public RestTemplate restTemplate() {\r\n        return new RestTemplate();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/config/RestTemplateConfig.java b/../English_Dictionary/src/main/java/vn/iotstar/config/RestTemplateConfig.java
--- a/../English_Dictionary/src/main/java/vn/iotstar/config/RestTemplateConfig.java	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/config/RestTemplateConfig.java	(date 1746284535992)
@@ -2,6 +2,8 @@
 
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
+import org.springframework.security.crypto.password.PasswordEncoder;
 import org.springframework.web.client.RestTemplate;
 
 @Configuration
@@ -11,4 +13,9 @@
     public RestTemplate restTemplate() {
         return new RestTemplate();
     }
+	
+	@Bean
+	public PasswordEncoder passwordEncoder() {
+	    return new BCryptPasswordEncoder();
+	}
 }
Index: app/src/main/java/com/example/project_ltdd/api/services/TranslateService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/api/services/TranslateService.java b/app/src/main/java/com/example/project_ltdd/api/services/TranslateService.java
new file mode 100644
--- /dev/null	(date 1746286318236)
+++ b/app/src/main/java/com/example/project_ltdd/api/services/TranslateService.java	(date 1746286318236)
@@ -0,0 +1,15 @@
+package com.example.project_ltdd.api.services;
+
+import com.example.project_ltdd.models.TranslateModel;
+
+import retrofit2.Call;
+import retrofit2.http.Body;
+import retrofit2.http.Headers;
+import retrofit2.http.POST;
+
+
+public interface TranslateService {
+    @POST("translate")
+    Call<TranslateModel> translate(@Body TranslateModel body);
+}
+
Index: ../English_Dictionary/src/main/java/vn/iotstar/model/UserLoginDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/model/UserLoginDTO.java b/../English_Dictionary/src/main/java/vn/iotstar/model/UserLoginDTO.java
new file mode 100644
--- /dev/null	(date 1746284535992)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/model/UserLoginDTO.java	(date 1746284535992)
@@ -0,0 +1,18 @@
+package vn.iotstar.model;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class UserLoginDTO {
+    private String email;
+    private String password;
+    private int userId;
+    private String fullname;
+	
+	
+    
+}
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\r\nagp = \"8.7.3\"\r\njunit = \"4.13.2\"\r\njunitVersion = \"1.2.1\"\r\nespressoCore = \"3.6.1\"\r\nappcompat = \"1.7.0\"\r\nmaterial = \"1.12.0\"\r\nactivity = \"1.10.0\"\r\nconstraintlayout = \"2.2.0\"\r\nretrofit = \"2.9.0\"\r\nokhttp = \"4.9.1\"\r\nlottieVersion = \"6.6.4\"\r\npinviewVersion = \"1.4.4\"\r\n\r\n[libraries]\r\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\r\next-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\r\nespresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\r\nappcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\r\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\r\nactivity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\r\nconstraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\r\nretrofit = { group = \"com.squareup.retrofit2\", name = \"retrofit\", version.ref = \"retrofit\"}\r\nconverter-gson = { group = \"com.squareup.retrofit2\", name = \"converter-gson\", version.ref = \"retrofit\" }\r\nlogging-interceptor = { group = \"com.squareup.okhttp3\", name = \"logging-interceptor\", version.ref = \"okhttp\" }\r\nlottie = {group = \"com.airbnb.android\", name = \"lottie\", version.ref = \"lottieVersion\"}\r\npinview = { group = \"io.github.chaosleung\", name = \"pinview\", version.ref = \"pinviewVersion\" }\r\n\r\n\r\n[plugins]\r\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/gradle/libs.versions.toml	(date 1746284536007)
@@ -7,7 +7,7 @@
 material = "1.12.0"
 activity = "1.10.0"
 constraintlayout = "2.2.0"
-retrofit = "2.9.0"
+
 okhttp = "4.9.1"
 lottieVersion = "6.6.4"
 pinviewVersion = "1.4.4"
@@ -20,8 +20,7 @@
 material = { group = "com.google.android.material", name = "material", version.ref = "material" }
 activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
 constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
-retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit"}
-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
+
 logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
 lottie = {group = "com.airbnb.android", name = "lottie", version.ref = "lottieVersion"}
 pinview = { group = "io.github.chaosleung", name = "pinview", version.ref = "pinviewVersion" }
Index: app/src/main/java/com/example/project_ltdd/api/services/AuthService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/api/services/AuthService.java b/app/src/main/java/com/example/project_ltdd/api/services/AuthService.java
new file mode 100644
--- /dev/null	(date 1746284536007)
+++ b/app/src/main/java/com/example/project_ltdd/api/services/AuthService.java	(date 1746284536007)
@@ -0,0 +1,19 @@
+package com.example.project_ltdd.api.services;
+import com.example.project_ltdd.models.LoginRequest;
+import com.example.project_ltdd.models.LoginResponse;
+import com.example.project_ltdd.models.OTPVerificationModel;
+import com.example.project_ltdd.models.UserRegisterModel;
+
+import retrofit2.Call;
+import retrofit2.http.Body;
+import retrofit2.http.POST;
+
+public interface AuthService {
+    @POST("/api/auth/register")
+    Call<String> register(@Body UserRegisterModel dto);
+
+    @POST("/api/auth/verify-otp")
+    Call<String> verifyOtp(@Body OTPVerificationModel dto);
+    @POST("/api/auth/login")
+    Call<LoginResponse> login(@Body LoginRequest request);
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/controller/AuthController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/controller/AuthController.java b/../English_Dictionary/src/main/java/vn/iotstar/controller/AuthController.java
new file mode 100644
--- /dev/null	(date 1746287146987)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/controller/AuthController.java	(date 1746287146987)
@@ -0,0 +1,113 @@
+package vn.iotstar.controller;
+
+import java.time.LocalDateTime;
+import java.util.Optional;
+import java.util.Random;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.ResponseEntity;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestBody;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import jakarta.transaction.Transactional;
+import vn.iotstar.entity.OtpEntity;
+import vn.iotstar.entity.UserEntity;
+import vn.iotstar.model.LoginResponse;
+import vn.iotstar.model.OTPVerificationDTO;
+import vn.iotstar.model.UserLoginDTO;
+import vn.iotstar.model.UserRegisterDTO;
+import vn.iotstar.repository.OtpRepository;
+import vn.iotstar.repository.UserRepository;
+import vn.iotstar.service.impl.EmailServiceImpl;
+
+@RestController
+@RequestMapping("/api/auth")
+public class AuthController {
+	@Autowired
+    private UserRepository userRepository;
+
+    @Autowired
+    private OtpRepository otpRepo;
+
+    @Autowired
+    private EmailServiceImpl emailService;
+    
+    @Autowired
+    private PasswordEncoder passwordEncoder;
+    
+    @Transactional
+    @PostMapping("/register")
+    public ResponseEntity<?> register(@RequestBody UserRegisterDTO userDTO) {
+        if (userRepository.findByEmail(userDTO.getEmail()).isPresent()) {
+            return ResponseEntity.badRequest().body("Email đã tồn tại!");
+        }
+
+        // Tạo OTP
+        String otp = String.format("%06d", new Random().nextInt(999999));
+        LocalDateTime expiryTime = LocalDateTime.now().plusMinutes(5);
+
+        // Lưu OTP vào DB
+        otpRepo.deleteByEmail(userDTO.getEmail()); // clear cũ nếu có
+        OtpEntity otpEntity = new OtpEntity();
+        otpEntity.setEmail(userDTO.getEmail());
+        otpEntity.setOtp(otp);
+        otpEntity.setExpiryTime(expiryTime);
+        otpRepo.save(otpEntity);
+
+        // Gửi mail
+        emailService.sendOTPEmail(userDTO.getEmail(), otp);
+
+        return ResponseEntity.ok("Đã gửi OTP đến email!");
+    }
+    
+    @Transactional
+    @PostMapping("/verify-otp")
+    public ResponseEntity<?> verifyOtp(@RequestBody OTPVerificationDTO dto) {
+        Optional<OtpEntity> otpData = otpRepo.findByEmail(dto.getEmail());
+
+        if (otpData.isEmpty()) return ResponseEntity.badRequest().body("Không tìm thấy OTP!");
+
+        OtpEntity otp = otpData.get();
+
+        if (otp.getExpiryTime().isBefore(LocalDateTime.now()))
+            return ResponseEntity.badRequest().body("Mã OTP đã hết hạn!");
+
+        if (!otp.getOtp().equals(dto.getOtp()))
+            return ResponseEntity.badRequest().body("Mã OTP không đúng!");
+
+        // Nếu đúng OTP → tạo user
+        UserEntity user = new UserEntity();
+        user.setEmail(dto.getEmail());
+        user.setFullname(dto.getFullname());
+        user.setPassword(passwordEncoder.encode(dto.getPassword()));
+
+        userRepository.save(user);
+        otpRepo.deleteByEmail(dto.getEmail());
+
+        return ResponseEntity.ok("Xác thực thành công. Tài khoản đã được tạo.");
+    }
+    
+    @PostMapping("/login")
+    public ResponseEntity<LoginResponse> login(@RequestBody UserLoginDTO loginDTO) {
+        Optional<UserEntity> optionalUser = userRepository.findByEmail(loginDTO.getEmail());
+
+        if (optionalUser.isEmpty()) {
+            return ResponseEntity.badRequest()
+                .body(new LoginResponse(false, "Email không tồn tại!", null));
+        }
+
+        UserEntity user = optionalUser.get();
+
+        if (!passwordEncoder.matches(loginDTO.getPassword(), user.getPassword())) {
+            return ResponseEntity.badRequest()
+                .body(new LoginResponse(false, "Sai mật khẩu!", null));
+        }
+
+        UserLoginDTO data = new UserLoginDTO(user.getFullname(), user.getEmail(), user.getUser_id(), user.getFullname());
+        return ResponseEntity.ok(new LoginResponse(true, "Đăng nhập thành công!", data));
+    }
+
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/entity/OtpEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/entity/OtpEntity.java b/../English_Dictionary/src/main/java/vn/iotstar/entity/OtpEntity.java
new file mode 100644
--- /dev/null	(date 1746284535992)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/entity/OtpEntity.java	(date 1746284535992)
@@ -0,0 +1,31 @@
+package vn.iotstar.entity;
+
+import java.time.LocalDateTime;
+import jakarta.persistence.Column;
+import jakarta.persistence.Entity;
+import jakarta.persistence.GeneratedValue;
+import jakarta.persistence.GenerationType;
+import jakarta.persistence.Id;
+import jakarta.persistence.Table;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+@Table(name = "otp_verification")
+@Entity
+public class OtpEntity {
+	@Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private int id;
+
+    @Column(nullable = false)
+    private String email;
+
+    @Column(nullable = false)
+    private String otp;
+
+    private LocalDateTime expiryTime;
+}
Index: app/src/main/java/com/example/project_ltdd/api/retrofit_client/AuthRetrofitClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/project_ltdd/api/retrofit_client/AuthRetrofitClient.java b/app/src/main/java/com/example/project_ltdd/api/retrofit_client/AuthRetrofitClient.java
new file mode 100644
--- /dev/null	(date 1746287674485)
+++ b/app/src/main/java/com/example/project_ltdd/api/retrofit_client/AuthRetrofitClient.java	(date 1746287674485)
@@ -0,0 +1,28 @@
+package com.example.project_ltdd.api.retrofit_client;
+
+import com.example.project_ltdd.api.services.AuthService;
+
+import retrofit2.Retrofit;
+import retrofit2.converter.gson.GsonConverterFactory;
+import retrofit2.converter.scalars.ScalarsConverterFactory;
+
+public class AuthRetrofitClient {
+
+    private static final String BASE_URL = "http://192.168.1.83:8077";
+    private static Retrofit retrofit = null;
+
+    public static Retrofit getClient() {
+        if (retrofit == null) {
+            retrofit = new Retrofit.Builder()
+                    .baseUrl(BASE_URL)
+                    .addConverterFactory(ScalarsConverterFactory.create()) // <- Đặt trước
+                    .addConverterFactory(GsonConverterFactory.create())
+                    .build();
+        }
+        return retrofit;
+    }
+
+    public static AuthService getApiService() {
+        return getClient().create(AuthService.class);
+    }
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/model/OTPVerificationDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/model/OTPVerificationDTO.java b/../English_Dictionary/src/main/java/vn/iotstar/model/OTPVerificationDTO.java
new file mode 100644
--- /dev/null	(date 1746284535992)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/model/OTPVerificationDTO.java	(date 1746284535992)
@@ -0,0 +1,15 @@
+package vn.iotstar.model;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class OTPVerificationDTO {
+	private String email;
+    private String otp;
+    private String fullname; 
+    private String password; 
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/controller/SignupController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/controller/SignupController.java b/../English_Dictionary/src/main/java/vn/iotstar/controller/SignupController.java
new file mode 100644
--- /dev/null	(date 1746284535992)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/controller/SignupController.java	(date 1746284535992)
@@ -0,0 +1,10 @@
+package vn.iotstar.controller;
+
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+@RequestMapping("/api/signup")
+public class SignupController {
+	
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/service/EmailService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/service/EmailService.java b/../English_Dictionary/src/main/java/vn/iotstar/service/EmailService.java
new file mode 100644
--- /dev/null	(date 1746284536007)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/service/EmailService.java	(date 1746284536007)
@@ -0,0 +1,7 @@
+package vn.iotstar.service;
+
+public interface EmailService {
+
+	void sendOTPEmail(String toEmail, String otp);
+
+}
Index: ../English_Dictionary/src/main/java/vn/iotstar/model/LoginResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../English_Dictionary/src/main/java/vn/iotstar/model/LoginResponse.java b/../English_Dictionary/src/main/java/vn/iotstar/model/LoginResponse.java
new file mode 100644
--- /dev/null	(date 1746284535992)
+++ b/../English_Dictionary/src/main/java/vn/iotstar/model/LoginResponse.java	(date 1746284535992)
@@ -0,0 +1,16 @@
+package vn.iotstar.model;
+
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class LoginResponse {
+	private boolean success;
+    private String message;
+    private UserLoginDTO data;
+
+
+}
Index: app/src/main/res/layout/activity_otp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:padding=\"20dp\"\r\n    android:background=\"@android:color/white\"\r\n    tools:context=\".activities.OTPActivity\">\r\n\r\n\r\n    <ImageView\r\n        android:layout_width=\"32dp\"\r\n        android:layout_height=\"32dp\"\r\n        android:src=\"@drawable/ic_arrowgray\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvTitle\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Nhập mã OTP\"\r\n        android:textSize=\"20sp\"\r\n        android:textStyle=\"bold\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"50dp\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvDescription\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Chúng tôi đã gửi mã OTP đến mail của bạn.\"\r\n        android:textSize=\"16sp\"\r\n        android:layout_below=\"@id/tvTitle\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"10dp\"/>\r\n\r\n    <com.chaos.view.PinView\r\n        android:id=\"@+id/otpView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/tvDescription\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"20dp\"\r\n        app:itemBackground=\"@android:drawable/editbox_background\"\r\n        app:itemCount=\"6\"\r\n        app:itemWidth=\"40dp\"\r\n        app:itemHeight=\"40dp\"\r\n        app:itemSpacing=\"10dp\"\r\n        app:itemRadius=\"6dp\"\r\n        android:cursorVisible=\"true\"\r\n        android:inputType=\"number\"\r\n        android:focusable=\"true\"\r\n        android:focusableInTouchMode=\"true\"\r\n        app:lineColor=\"@android:color/darker_gray\"\r\n        android:textSize=\"20dp\"\r\n        android:textStyle=\"bold\"\r\n        android:textColor=\"@android:color/darker_gray\"/>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/layout_bottom_otp\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\"\r\n        android:layout_below=\"@id/otpView\">\r\n\r\n        <View\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"10dp\"/>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Thời gian tồn tại: 60s\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                />\r\n\r\n            <View\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"10dp\"/>\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Gửi lại\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:textColor=\"@color/primary\"\r\n                android:textSize=\"14dp\"\r\n                android:textStyle=\"bold\"\r\n                />\r\n\r\n            <View\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"10dp\"/>\r\n        </RelativeLayout>\r\n\r\n\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    <Button\r\n        android:id=\"@+id/btnConfirmOtp\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/layout_bottom_otp\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:text=\"Xác nhận\"\r\n        android:textSize=\"16sp\"\r\n        android:textColor=\"@android:color/white\"\r\n\r\n        android:padding=\"10dp\"/>\r\n    <!--app:backgroundTint=\"@null\"-->\r\n\r\n    <ImageView\r\n        android:layout_width=\"350dp\"\r\n        android:layout_height=\"265dp\"\r\n        android:layout_below=\"@+id/btnConfirmOtp\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:src=\"@drawable/send_mail\" />\r\n\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_otp.xml b/app/src/main/res/layout/activity_otp.xml
--- a/app/src/main/res/layout/activity_otp.xml	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/app/src/main/res/layout/activity_otp.xml	(date 1746284536007)
@@ -6,19 +6,15 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:padding="20dp"
     android:background="@android:color/white"
-    tools:context=".activities.OTPActivity">
+    >
 
-
-    <ImageView
-        android:layout_width="32dp"
-        android:layout_height="32dp"
-        android:src="@drawable/ic_arrowgray" />
 
     <TextView
         android:id="@+id/tvTitle"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:text="Nhập mã OTP"
+        android:textColor="@color/primary"
         android:textSize="20sp"
         android:textStyle="bold"
         android:layout_centerHorizontal="true"
@@ -28,7 +24,7 @@
         android:id="@+id/tvDescription"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="Chúng tôi đã gửi mã OTP đến mail của bạn."
+        android:text="OTP được gửi đến mail của bạn."
         android:textSize="16sp"
         android:layout_below="@id/tvTitle"
         android:layout_centerHorizontal="true"
@@ -43,7 +39,7 @@
         android:layout_marginTop="20dp"
         app:itemBackground="@android:drawable/editbox_background"
         app:itemCount="6"
-        app:itemWidth="40dp"
+        app:itemWidth="35dp"
         app:itemHeight="40dp"
         app:itemSpacing="10dp"
         app:itemRadius="6dp"
@@ -86,6 +82,7 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content">
             <TextView
+                android:id="@+id/resend"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:text="Gửi lại"
@@ -105,24 +102,17 @@
 
     </LinearLayout>
 
-    <Button
-        android:id="@+id/btnConfirmOtp"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_below="@id/layout_bottom_otp"
-        android:layout_marginTop="20dp"
-        android:text="Xác nhận"
-        android:textSize="16sp"
-        android:textColor="@android:color/white"
 
-        android:padding="10dp"/>
     <!--app:backgroundTint="@null"-->
 
     <ImageView
-        android:layout_width="350dp"
-        android:layout_height="265dp"
-        android:layout_below="@+id/btnConfirmOtp"
-        android:layout_centerHorizontal="true"
+        android:layout_width="370dp"
+        android:layout_height="285dp"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentEnd="true"
+        android:layout_marginStart="38dp"
+        android:layout_marginEnd="43dp"
+        android:layout_marginTop="230dp"
         android:src="@drawable/send_mail" />
 
 
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n        <DropdownSelection timestamp=\"2025-04-30T08:51:17.995358500Z\">\r\n          <Target type=\"DEFAULT_BOOT\">\r\n            <handle>\r\n              <DeviceId pluginId=\"LocalEmulator\" identifier=\"path=C:\\Users\\Admin\\.android\\avd\\Pixel_3a_API_35.avd\" />\r\n            </handle>\r\n          </Target>\r\n        </DropdownSelection>\r\n        <DialogSelection />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/.idea/deploymentTargetSelector.xml	(date 1746286161973)
@@ -4,10 +4,10 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
-        <DropdownSelection timestamp="2025-04-30T08:51:17.995358500Z">
+        <DropdownSelection timestamp="2025-04-22T06:43:18.018300900Z">
           <Target type="DEFAULT_BOOT">
             <handle>
-              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\Admin\.android\avd\Pixel_3a_API_35.avd" />
+              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\Admin\.android\avd\Pixel_9_API_35.avd" />
             </handle>
           </Target>
         </DropdownSelection>
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.project_ltdd\"\r\n    compileSdk = 35\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.project_ltdd\"\r\n        minSdk = 24\r\n        targetSdk = 35\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n\r\n    buildFeatures{\r\n        viewBinding = true\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_11\r\n        targetCompatibility = JavaVersion.VERSION_11\r\n    }\r\n\r\n\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation(libs.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.activity)\r\n    implementation(libs.constraintlayout)\r\n    implementation(libs.retrofit)\r\n    implementation(libs.converter.gson)\r\n    implementation(libs.logging.interceptor)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.ext.junit)\r\n    androidTestImplementation(libs.espresso.core)\r\n    implementation(\"me.relex:circleindicator:2.1.6\")\r\n    implementation(\"com.google.mlkit:text-recognition:16.0.0\")\r\n    implementation(\"com.github.bumptech.glide:glide:4.13.2\") // Kiểm tra phiên bản mới nhất của Glide\r\n    annotationProcessor(\"com.github.bumptech.glide:compiler:4.13.2\")\r\n    implementation(\"com.squareup.retrofit2:retrofit:2.9.0\")\r\n    implementation(\"com.squareup.retrofit2:converter-gson:2.9.0\")\r\n    implementation(\"com.squareup.okhttp3:logging-interceptor:3.12.0\")\r\n    implementation(\"com.google.mlkit:translate:17.0.2\")\r\n    implementation(\"com.google.android.gms:play-services-mlkit-text-recognition:19.0.0\")\r\n\timplementation(libs.lottie)\r\n    implementation(libs.pinview)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision e8dba809d8a894dabac454f2b29ffd0227fe7039)
+++ b/app/build.gradle.kts	(date 1746286228979)
@@ -43,8 +43,6 @@
     implementation(libs.material)
     implementation(libs.activity)
     implementation(libs.constraintlayout)
-    implementation(libs.retrofit)
-    implementation(libs.converter.gson)
     implementation(libs.logging.interceptor)
     testImplementation(libs.junit)
     androidTestImplementation(libs.ext.junit)
@@ -58,6 +56,8 @@
     implementation("com.squareup.okhttp3:logging-interceptor:3.12.0")
     implementation("com.google.mlkit:translate:17.0.2")
     implementation("com.google.android.gms:play-services-mlkit-text-recognition:19.0.0")
+    implementation ("com.squareup.retrofit2:converter-scalars:2.9.0")
 	implementation(libs.lottie)
+	implementation ("io.github.chaosleung:pinview:1.4.4")
     implementation(libs.pinview)
 }
\ No newline at end of file
